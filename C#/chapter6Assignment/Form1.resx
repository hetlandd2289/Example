<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="kilroy.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>